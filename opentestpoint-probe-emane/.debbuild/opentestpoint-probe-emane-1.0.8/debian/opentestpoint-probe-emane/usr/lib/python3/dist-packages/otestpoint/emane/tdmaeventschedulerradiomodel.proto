/*
 * Copyright (c) 2014-2016 - Adjacent Link LLC, Bridgewater, New Jersey
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *  * Neither the name of Adjacent Link LLC nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * See toplevel COPYING for more information.
 */

 /*
  * !!!
  * !!! THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY
  * !!!
  */

syntax = "proto2";

package OpenTestPoint;

option optimize_for = SPEED;

import "measurementtable.proto";


message Measurement_emane_tdmaeventschedulerradiomodel_counters_general
{
  message Description
  {
    required string name = 1 [default = "Measurement_emane_tdmaeventschedulerradiomodel_counters_general"];
    required string module = 2 [default = "otestpoint.emane.tdmaeventschedulerradiomodel"];
    required uint32 version = 3 [default = 1];
  }
  // do not set description
  optional Description description = 1;

  optional double avgprocessapiqueuedepth = 2 ;
  optional double avgprocessapiqueuewait = 3 ;
  optional double avgtimedeventlatency = 4 ;
  optional double avgtimedeventlatencyratio = 5 ;
  optional uint64 processedconfiguration = 6 ;
  optional uint64 processeddownstreamcontrol = 7 ;
  optional uint64 processeddownstreampackets = 8 ;
  optional uint64 processedevents = 9 ;
  optional uint64 processedtimedevents = 10 ;
  optional uint64 processedupstreamcontrol = 11 ;
  optional uint64 processedupstreampackets = 12 ;
}

message Measurement_emane_tdmaeventschedulerradiomodel_counters_schedule
{
  message Description
  {
    required string name = 1 [default = "Measurement_emane_tdmaeventschedulerradiomodel_counters_schedule"];
    required string module = 2 [default = "otestpoint.emane.tdmaeventschedulerradiomodel"];
    required uint32 version = 3 [default = 1];
  }
  // do not set description
  optional Description description = 1;

  optional uint64 scheduler_scheduleacceptfull = 2 ;
  optional uint64 scheduler_scheduleacceptupdate = 3 ;
  optional uint64 scheduler_schedulerejectframeindexrange = 4 ;
  optional uint64 scheduler_schedulerejectslotindexrange = 5 ;
  optional uint64 scheduler_schedulerejectupdatebeforefull = 6 ;
  optional uint64 scheduler_schedulerejectother = 7 ;
}

message Measurement_emane_tdmaeventschedulerradiomodel_counters_slot
{
  message Description
  {
    required string name = 1 [default = "Measurement_emane_tdmaeventschedulerradiomodel_counters_slot"];
    required string module = 2 [default = "otestpoint.emane.tdmaeventschedulerradiomodel"];
    required uint32 version = 3 [default = 1];
  }
  // do not set description
  optional Description description = 1;

  optional uint64 numrxsloterrormissed = 2 ;
  optional uint64 numrxsloterrorrxduringidle = 3 ;
  optional uint64 numrxsloterrorrxduringtx = 4 ;
  optional uint64 numrxsloterrorrxlock = 5 ;
  optional uint64 numrxsloterrorrxtoolong = 6 ;
  optional uint64 numrxsloterrorrxwrongfrequency = 7 ;
  optional uint64 numrxslotvalid = 8 ;
  optional uint64 numtxsloterrormissed = 9 ;
  optional uint64 numtxsloterrortoobig = 10 ;
  optional uint64 numtxslotvalid = 11 ;
}

message Measurement_emane_tdmaeventschedulerradiomodel_tables_events
{
  message Description
  {
    required string name = 1 [default = "Measurement_emane_tdmaeventschedulerradiomodel_tables_events"];
    required string module = 2 [default = "otestpoint.emane.tdmaeventschedulerradiomodel"];
    required uint32 version = 3 [default = 1];
  }
  // do not set description
  optional Description description = 1;

   optional MeasurementTable eventreceptiontable = 2 ;
}

message Measurement_emane_tdmaeventschedulerradiomodel_tables_schedule
{
  message Description
  {
    required string name = 1 [default = "Measurement_emane_tdmaeventschedulerradiomodel_tables_schedule"];
    required string module = 2 [default = "otestpoint.emane.tdmaeventschedulerradiomodel"];
    required uint32 version = 3 [default = 1];
  }
  // do not set description
  optional Description description = 1;

   optional MeasurementTable scheduler_scheduleinfotable = 2 ;
   optional MeasurementTable scheduler_structureinfotable = 3 ;
}

message Measurement_emane_tdmaeventschedulerradiomodel_tables_status_class0
{
  message Description
  {
    required string name = 1 [default = "Measurement_emane_tdmaeventschedulerradiomodel_tables_status_class0"];
    required string module = 2 [default = "otestpoint.emane.tdmaeventschedulerradiomodel"];
    required uint32 version = 3 [default = 1];
  }
  // do not set description
  optional Description description = 1;

   optional MeasurementTable broadcastbyteaccepttable0 = 2 ;
   optional MeasurementTable broadcastbytedroptable0 = 3 ;
   optional MeasurementTable unicastbyteaccepttable0 = 4 ;
   optional MeasurementTable unicastbytedroptable0 = 5 ;
}

message Measurement_emane_tdmaeventschedulerradiomodel_tables_status_class1
{
  message Description
  {
    required string name = 1 [default = "Measurement_emane_tdmaeventschedulerradiomodel_tables_status_class1"];
    required string module = 2 [default = "otestpoint.emane.tdmaeventschedulerradiomodel"];
    required uint32 version = 3 [default = 1];
  }
  // do not set description
  optional Description description = 1;

   optional MeasurementTable broadcastbyteaccepttable1 = 2 ;
   optional MeasurementTable broadcastbytedroptable1 = 3 ;
   optional MeasurementTable unicastbyteaccepttable1 = 4 ;
   optional MeasurementTable unicastbytedroptable1 = 5 ;
}

message Measurement_emane_tdmaeventschedulerradiomodel_tables_status_class2
{
  message Description
  {
    required string name = 1 [default = "Measurement_emane_tdmaeventschedulerradiomodel_tables_status_class2"];
    required string module = 2 [default = "otestpoint.emane.tdmaeventschedulerradiomodel"];
    required uint32 version = 3 [default = 1];
  }
  // do not set description
  optional Description description = 1;

   optional MeasurementTable broadcastbyteaccepttable2 = 2 ;
   optional MeasurementTable broadcastbytedroptable2 = 3 ;
   optional MeasurementTable unicastbyteaccepttable2 = 4 ;
   optional MeasurementTable unicastbytedroptable2 = 5 ;
}

message Measurement_emane_tdmaeventschedulerradiomodel_tables_status_class3
{
  message Description
  {
    required string name = 1 [default = "Measurement_emane_tdmaeventschedulerradiomodel_tables_status_class3"];
    required string module = 2 [default = "otestpoint.emane.tdmaeventschedulerradiomodel"];
    required uint32 version = 3 [default = 1];
  }
  // do not set description
  optional Description description = 1;

   optional MeasurementTable broadcastbyteaccepttable3 = 2 ;
   optional MeasurementTable broadcastbytedroptable3 = 3 ;
   optional MeasurementTable unicastbyteaccepttable3 = 4 ;
   optional MeasurementTable unicastbytedroptable3 = 5 ;
}

message Measurement_emane_tdmaeventschedulerradiomodel_tables_status_class4
{
  message Description
  {
    required string name = 1 [default = "Measurement_emane_tdmaeventschedulerradiomodel_tables_status_class4"];
    required string module = 2 [default = "otestpoint.emane.tdmaeventschedulerradiomodel"];
    required uint32 version = 3 [default = 1];
  }
  // do not set description
  optional Description description = 1;

   optional MeasurementTable broadcastbyteaccepttable4 = 2 ;
   optional MeasurementTable broadcastbytedroptable4 = 3 ;
   optional MeasurementTable unicastbyteaccepttable4 = 4 ;
   optional MeasurementTable unicastbytedroptable4 = 5 ;
}

message Measurement_emane_tdmaeventschedulerradiomodel_tables_status_neighbor
{
  message Description
  {
    required string name = 1 [default = "Measurement_emane_tdmaeventschedulerradiomodel_tables_status_neighbor"];
    required string module = 2 [default = "otestpoint.emane.tdmaeventschedulerradiomodel"];
    required uint32 version = 3 [default = 1];
  }
  // do not set description
  optional Description description = 1;

   optional MeasurementTable neighborstatustable = 2 ;
}

message Measurement_emane_tdmaeventschedulerradiomodel_tables_status_queue
{
  message Description
  {
    required string name = 1 [default = "Measurement_emane_tdmaeventschedulerradiomodel_tables_status_queue"];
    required string module = 2 [default = "otestpoint.emane.tdmaeventschedulerradiomodel"];
    required uint32 version = 3 [default = 1];
  }
  // do not set description
  optional Description description = 1;

   optional MeasurementTable queuefragmenthistogram = 2 ;
   optional MeasurementTable queuestatustable = 3 ;
}

message Measurement_emane_tdmaeventschedulerradiomodel_tables_status_slot
{
  message Description
  {
    required string name = 1 [default = "Measurement_emane_tdmaeventschedulerradiomodel_tables_status_slot"];
    required string module = 2 [default = "otestpoint.emane.tdmaeventschedulerradiomodel"];
    required uint32 version = 3 [default = 1];
  }
  // do not set description
  optional Description description = 1;

   optional MeasurementTable rxslotstatustable = 2 ;
   optional MeasurementTable txslotstatustable = 3 ;
}
